<Window x:Class="CSAnalyzer.Editor"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CSAnalyzer"
        xmlns:mex="clr-namespace:CSAnalyzer.Structures"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800"
        WindowStyle="None" ResizeMode="CanResizeWithGrip"
        MinWidth="150" MinHeight="100" AllowsTransparency="True"
        Background="#3F3F3F" BorderThickness="2"
        Loaded="Window_Loaded"
        >

    <Window.Resources>
        <BitmapImage x:Key="Minimum" UriSource="/Resources/Minimum.png" />
        <BitmapImage x:Key="Maximum" UriSource="/Resources/Maximum.png" />
        <BitmapImage x:Key="Exit" UriSource="/Resources/Exit.png" />

        <BitmapImage x:Key="Status_Ready" UriSource="/Resources/Status_Ready.png" />
        <BitmapImage x:Key="Status_Preparing" UriSource="/Resources/Status_Preparing.png" />
        <BitmapImage x:Key="Status_Build" UriSource="/Resources/Status_Build.png" />
        <BitmapImage x:Key="Status_Loading" UriSource="/Resources/Status_Loading.png" />

        <BitmapImage x:Key="New" UriSource="/Resources/New.png" />
        <BitmapImage x:Key="Open" UriSource="/Resources/Open.png" />
        <BitmapImage x:Key="Save" UriSource="/Resources/Save.png" />
        <BitmapImage x:Key="SaveAs" UriSource="/Resources/SaveAs.png" />
        
        <BitmapImage x:Key="Undo" UriSource="/Resources/Undo.png" />
        <BitmapImage x:Key="Redo" UriSource="/Resources/Redo.png" />

        <BitmapImage x:Key="Run" UriSource="/Resources/Run.png" />

        <BitmapImage x:Key="WindowIcon" UriSource="/Resources/WindowIcon.ico" />

        <Style x:Key="ButtonBase" TargetType="Button" >
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Gray"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Opacity" Value="1" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.6" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToolBarImage" TargetType="Image">
            <Setter Property="Width" Value="18" />
            <Setter Property="Margin" Value="2,2" />
        </Style>
        <Style x:Key="TitleBarImage" TargetType="Image">
            <Setter Property="Width" Value="14" />
            <Setter Property="Opacity" Value=".4" />
        </Style>
        <Style x:Key="TitleButton" TargetType="Button" BasedOn="{StaticResource ButtonBase}">
            <EventSetter Event="Click" Handler="TitleBarButton_Click" />
        </Style>
        <!--
        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                         TargetType="MenuItem">
            <Border Name="Border" Background="#1E1E1E"
                    BorderBrush="#1E1E1E">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" SharedSizeGroup="Icon"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto" SharedSizeGroup="Shortcut"/>
                        <ColumnDefinition Width="13"/>
                    </Grid.ColumnDefinitions>

                    <ContentPresenter 
                        Name="Icon"
                        Margin="6,0,6,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon"/>
                    <Border
                        Name="Check"
                        Width="13" Height="13"
                        Visibility="Collapsed"
                        Margin="6,0,6,0"
                        BorderThickness="0">
                        <Path
                            Name="CheckMark"
                            Width="7" Height="7"
                            Visibility="Hidden"
                            SnapsToDevicePixels="False"
                            Stroke="#444"
                            StrokeThickness="2"
                            Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                    </Border>
                    <ContentPresenter
                        Name="HeaderHost"
                        Grid.Column="1"
                        ContentSource="Header"
                        RecognizesAccessKey="True"/>
                    <TextBlock x:Name="InputGestureText"
                               Grid.Column="2"
                               Text="{TemplateBinding InputGestureText}"
                               Margin="5,2,0,2"
                               DockPanel.Dock="Right" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsCheckable" Value="true">
                    <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background"
                            Value="DimGray" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        -->
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border>
                            <Grid>
                                <Grid>
                                    <Border x:Name="border" BorderThickness="0"
                                            Background="#3F3F3F"/>
                                </Grid>
                                <ContentPresenter ContentSource="Header"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="border"
                                        Property="Background"
                                        Value="LightGray" />
                            </Trigger>
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter TargetName="border"
                                        Property="Background"
                                        Value="#1E1E1E" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="3*" MinHeight="60"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*" MinHeight="60"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Background="Black" MouseDown="Grid_MouseDown">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="25"/>
                <ColumnDefinition />
                <ColumnDefinition Width="25"/>
                <ColumnDefinition Width="25"/>
                <ColumnDefinition Width="25"/>
            </Grid.ColumnDefinitions>

            <Image Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center"
                   Source="{StaticResource WindowIcon}" Margin="0,3,0,5"/>
            <TextBlock Foreground="White" Text="CSharp Analyzer" Grid.Column="1"/>
            <Button Style="{StaticResource TitleButton}" Grid.Column="2" x:Uid="Minimum">
                <Image Style="{StaticResource TitleBarImage}" Source="{StaticResource Minimum}"/>
            </Button>
            <Button Style="{StaticResource TitleButton}" Grid.Column="3" x:Uid="Maximum">
                <Image Style="{StaticResource TitleBarImage}" Source="{StaticResource Maximum}"/>
            </Button>
            <Button Style="{StaticResource TitleButton}" Grid.Column="4" x:Uid="Exit">
                <Image Style="{StaticResource TitleBarImage}" Source="{StaticResource Exit}"/>
            </Button>
        </Grid>

        <Menu Grid.Row="1" Background="Transparent" Foreground="Black"
              HorizontalAlignment="Left" VerticalAlignment="Center" Height="20">
            <MenuItem Width="40">
                <MenuItem.Header>
                    <TextBlock Text="File" VerticalAlignment="Center" Foreground="White"
                               HorizontalAlignment="Center" Padding="2,0"/>
                </MenuItem.Header>
                <MenuItem Header="New" Click="FileNew_Click" InputGestureText="Ctrl+N" />
                <MenuItem Header="Open" Click="FileOpen_Click" InputGestureText="Ctrl+O" />
                <Separator />
                <MenuItem Header="Close" Click="FileClose_Click" InputGestureText="Ctrl+W"
                          x:Name="MenuFileClose"/>
                <Separator />
                <MenuItem Header="Save" Click="FileSave_Click" InputGestureText="Ctrl+S"
                          x:Name="MenuFileSave"/>
                <MenuItem Header="SaveAs" Click="FileSaveAs_Click" InputGestureText="Ctrl+Shift+S"
                          x:Name="MenuFileSaveAs"/>
                <MenuItem Header="Recent" x:Name="MenuFileRecent">
                    <MenuItem Header="No Recent" IsEnabled="False" x:Name="NoRecentMenuItem"/>
                </MenuItem>
                <MenuItem Header="Exit" Click="FileExit_Click" InputGestureText="Alt+F4"/>
            </MenuItem>
            <MenuItem x:Name="MenuEdit">
                <MenuItem.Header>
                    <TextBlock Text="Edit" VerticalAlignment="Center" Foreground="White"
                               HorizontalAlignment="Center" Padding="2,0"/>
                </MenuItem.Header>
                <MenuItem Header="Undo" Click="EditUndo_Click" InputGestureText="Ctrl+Z"/>
                <MenuItem Header="Redo" Click="EditRedo_Click" InputGestureText="Ctrl+Y"/>
                <Separator />
                <MenuItem Header="Cut" Click="EditCut_Click" InputGestureText="Ctrl+X"/>
                <MenuItem Header="Copy" Click="EditCopy_Click" InputGestureText="Ctrl+C"/>
                <MenuItem Header="Paste" Click="EditPaste_Click" InputGestureText="Ctrl+V"/>
                <MenuItem Header="Delete" Click="EditDelete_Click" InputGestureText="Del"/>
                <Separator />
                <MenuItem Header="Select All" Click="EditSelectAll_Click" InputGestureText="Ctrl+A"/>
                <Separator />
                <MenuItem Header="Find" Click="EditFind_Click" InputGestureText="Ctrl+F"/>
                <MenuItem Header="Replace" Click="EditReplace_Click" InputGestureText="Ctrl+H"/>
                <MenuItem Header="Line Move" Click="EditLineMove_Click" InputGestureText="Ctrl+G"/>
            </MenuItem>
            <MenuItem x:Name="MenuRun">
                <MenuItem.Header>
                    <TextBlock Text="Run" VerticalAlignment="Center" Foreground="White"
                               HorizontalAlignment="Center" Padding="2,0"/>
                </MenuItem.Header>
                <MenuItem Header="Compile" Click="RunCompile_Click" InputGestureText="Ctrl+M"/>
                <MenuItem Header="Run" Click="RunRun_Click" InputGestureText="Ctrl+B"/>
                <MenuItem Header="Save and Run" Click="RunSaveAndRun_Click" InputGestureText="Ctrl+Shift+B"/>
                <MenuItem Header="SaveAs and Run" Click="RunSaveAsAndRun_Click" InputGestureText="Ctrl+Alt+B"/>
            </MenuItem>
        </Menu>

        <StackPanel Grid.Row="2" HorizontalAlignment="Left" Orientation="Horizontal" Margin="5,0">
            <Button Style="{StaticResource ButtonBase}" x:Name="ToolUndoButton"
                    Click="ToolButton_Click" x:Uid="Undo" ToolTip="Undo">
                <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource Undo}"/>
            </Button>
            <Button Style="{StaticResource ButtonBase}" x:Name="ToolRedoButton"
                    Click="ToolButton_Click" x:Uid="Redo" ToolTip="Redo">
                <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource Redo}"/>
            </Button>
            <Rectangle Width="0.5" Fill="DimGray"/>
            <Button Style="{StaticResource ButtonBase}"
                    Click="ToolButton_Click" x:Uid="New" ToolTip="New">
                <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource New}"/>
            </Button>
            <Button Style="{StaticResource ButtonBase}"
                    Click="ToolButton_Click" x:Uid="Open" ToolTip="Open">
                <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource Open}"/>
            </Button>
            <Button Style="{StaticResource ButtonBase}" x:Name="ToolSaveButton"
                    Click="ToolButton_Click" x:Uid="Save" ToolTip="Save">
                <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource Save}"/>
            </Button>
            <Button Style="{StaticResource ButtonBase}" x:Name="ToolSaveAsButton"
                    Click="ToolButton_Click" x:Uid="SaveAs" ToolTip="SaveAs">
                <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource SaveAs}"/>
            </Button>
            <Rectangle Width="0.5" Fill="DimGray"/>
            <Button Style="{StaticResource ButtonBase}" x:Name="ToolBuildButton"
                        Click="ToolButton_Click" x:Uid="Run" ToolTip="Run">
                <Image Style="{StaticResource ToolBarImage}" Source="{StaticResource Run}"/>
            </Button>
        </StackPanel>

        <Grid Grid.Row="2" Grid.RowSpan="2" Visibility="Hidden" x:Name="EditGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition />
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" HorizontalAlignment="Right" MaxWidth="200" Width="auto"
                        Background="DodgerBlue" Height="20" Orientation="Horizontal">
                <TextBlock Margin="2" Foreground="White" Height="20" MaxWidth="176"
                           Text="" x:Name="FileTextBox"/>
                <Button Width="20" Height="20" Style="{StaticResource ButtonBase}"
                        Click="Button_Click">
                    <Image Source="{StaticResource Exit}" Width="8" Height="8" Stretch="Uniform"/>
                </Button>
            </StackPanel>

            <avalonEdit:TextEditor Grid.Row="1"
            xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
            Name="TextEditor"
            FontFamily="D2Coding"
            FontWeight="Light"
            FontSize="9pt"
            Background="#1E1E1E"
            Foreground="White"
            ShowLineNumbers="True" BorderThickness="2"
            KeyDown="Editor_KeyDown"
            PreviewTextInput="TextEditor_PreviewTextInput"
            >
            </avalonEdit:TextEditor>
        </Grid>

        <GridSplitter Grid.Row="4" Height="5"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Center"
                      Background="Transparent" ShowsPreview="True"
                      ResizeDirection="Rows"/>
        <Rectangle Grid.Row="4" Height="1"
                   HorizontalAlignment="Stretch"
                   VerticalAlignment="Center"
                   Fill="#1E1E1E"/>

        <Border Grid.Row="5" BorderBrush="Gray" BorderThickness="1">
            <TabControl Background="#1E1E1E" x:Name="AnalyzerTab" TabStripPlacement="Bottom"
                    BorderThickness="0" Margin="4,0">
                <TabItem Name="Compiler" Width="60" Height="20" Margin="1,0" Background="Transparent" TabIndex="0">
                    <TextBox x:Name="CompileTextBox" Background="#1E1E1E"
                         Foreground="White" BorderThickness="0"
                             IsReadOnly="True" Focusable="False"
                             VerticalScrollBarVisibility="Auto"
                             TextWrapping="Wrap">
                        <TextBox.Resources>
                            <Style x:Key="ScrollThumb" TargetType="{x:Type Thumb}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                            <Rectangle x:Name="Rectangle1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                       Fill="Transparent" SnapsToDevicePixels="True"/>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="Tag" Value="Horizontal">
                                                    <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                                    <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                                <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
                                <Setter Property="Foreground" Value="Red" />
                                <Setter Property="Background" Value="DarkGray" />
                                <Setter Property="Width" Value="10" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                            <Grid x:Name="GridRoot" Width="19" Background="{TemplateBinding Background}">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="0.00001*" />
                                                </Grid.RowDefinitions>

                                                <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                                    <Track.Thumb>
                                                        <Thumb x:Name="Thumb" Background="DimGray" />
                                                    </Track.Thumb>
                                                    <Track.IncreaseRepeatButton>
                                                        <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                                    </Track.IncreaseRepeatButton>
                                                    <Track.DecreaseRepeatButton>
                                                        <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                                    </Track.DecreaseRepeatButton>
                                                </Track>
                                            </Grid>

                                            <ControlTemplate.Triggers>
                                                <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                                    <Setter Value="DarkGray" TargetName="Thumb" Property="Background" />
                                                </Trigger>
                                                <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                                    <Setter Value="White" TargetName="Thumb" Property="Background" />
                                                </Trigger>

                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                                                </Trigger>
                                                <Trigger Property="Orientation" Value="Horizontal">
                                                    <Setter TargetName="GridRoot" Property="LayoutTransform">
                                                        <Setter.Value>
                                                            <RotateTransform Angle="-90" />
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter TargetName="PART_Track" Property="LayoutTransform">
                                                        <Setter.Value>
                                                            <RotateTransform Angle="-90" />
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Width" Value="Auto" />
                                                    <Setter Property="Margin" Value="2,0" />
                                                    <Setter Property="Height" Value="12" />
                                                    <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                                    <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                                    <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TextBox.Resources>
                    </TextBox>
                    <TabItem.Header>
                        <TextBlock Text="Compiler" Foreground="White"
                               Margin="2,0" HorizontalAlignment="Center"/>
                    </TabItem.Header>
                </TabItem>
                <TabItem Name="Output" Width="60" Height="20" Margin="1,0" Background="Transparent" TabIndex="1">
                    <TextBox x:Name="ResultTextBox" Background="#1E1E1E"
                             Foreground="White" BorderThickness="0"
                             IsReadOnly="True" Focusable="False"
                             VerticalScrollBarVisibility="Auto"
                             TextWrapping="Wrap"/>
                    <TabItem.Header>
                        <TextBlock Text="Output" Foreground="White"
                               Margin="2,0" HorizontalAlignment="Center"/>
                    </TabItem.Header>
                </TabItem>
            </TabControl>
        </Border>
        <Grid Grid.Row="6" Background="DodgerBlue">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="25"/>
                <ColumnDefinition />
                <ColumnDefinition MinWidth="60" Width="auto" MaxWidth="80"/>
                <ColumnDefinition MinWidth="60" Width="auto" MaxWidth="80"/>
                <ColumnDefinition Width="25"/>
            </Grid.ColumnDefinitions>

            <Image Grid.Column="0" x:Name="StatusImage" Source="{StaticResource Status_Preparing}"
                   Margin="2" Stretch="Uniform"/>
            <TextBlock Grid.Column="1" x:Name="StatusTextBlock" Text="Status: Preparing..."
                       Foreground="White"/>
            <TextBlock Grid.Column="2" x:Name="LineTextBlock" Text="Ln: 1"
                       Foreground="White" Margin="5,0"/>
            <TextBlock Grid.Column="3" x:Name="ColumnTextBlock" Text="Co: 1"
                       Foreground="White" Margin="5,0"/>
            <Button Style="{StaticResource ButtonBase}" Grid.Column="2">
                <Image x:Name="AlarmButtonImage"/>
            </Button>
        </Grid>
    </Grid>
</Window>
